#!/bin/bash -il

# Use non-interactive cp
unalias cp
# Always use workshop-user for consistency
USERNAME=workshop-user
USER_ID=${HOST_USER_ID:-9001}

# Create user with zsh as default shell
useradd --shell /bin/zsh -u $USER_ID -G lucky -o -c "" -m $USERNAME
export HOME=/home/$USERNAME
export USER=$USERNAME
export LOGNAME=$USERNAME
export MAIL=/var/spool/mail/$USERNAME
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/$USERNAME/bin
export supkg="su-exec"
chown $USERNAME:$USERNAME $HOME
cp -R /etc/skel $HOME && chown -R $USERNAME:$USERNAME $HOME/skel && (ls -A1 $HOME/skel | xargs -I {} mv -n $HOME/skel/{} $HOME) && rm -Rf $HOME/skel

# Install oh-my-zsh
runuser -l $USERNAME -c 'sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'

# Install zsh plugins
runuser -l $USERNAME -c 'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting'
runuser -l $USERNAME -c 'git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions'

# Configure zsh theme and plugins
cat > $HOME/.zshrc <<'EOF'
# ~/.zshrc - written by provisioning script

# ---- Locale: prefer en_US.UTF-8 if available, else C.UTF-8 ----
# Put this at the very top so prompt/theme code doesn't see a bad locale.
if locale -a 2>/dev/null | grep -iqE '^en_US\.utf-?8$'; then
  export LANG=en_US.UTF-8
else
  export LANG=C.UTF-8
fi
export LANGUAGE=${LANGUAGE:-en_US:en}
unset LC_ALL

# ---- only proceed for interactive shells ----
# Non-interactive shells (scripts) should not run prompt/conda activation.
case $- in
  *i*) ;;
  *)
    return 0
    ;;
esac

# ---- oh-my-zsh ----
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="agnoster"                  # requires UTF-8 + powerline/nerd font
plugins=(git zsh-syntax-highlighting zsh-autosuggestions)

# Hide agnoster’s built-in python/conda segment (so we keep only Conda’s own (workshop) prefix)
export AGNOSTER_HIDE_PYTHON=true

# Source oh-my-zsh only if installed
if [ -f "$ZSH/oh-my-zsh.sh" ]; then
  source "$ZSH/oh-my-zsh.sh"
fi

# ---- Prompt / username behavior ----
# DEFAULT_USER should be the local default user name so that the prompt
# hides the username for normal sessions and shows it when different or SSH.
DEFAULT_USER="workshop-user"
prompt_context() {
  # show username when connected via SSH or user differs from default
  if [[ "$USER" != "$DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
    prompt_segment black default "%n"
  fi
}

# ---- Conda initialization (safe/guarded) ----
# Only try to initialize conda if conda exists and we are interactive.
if command -v conda >/dev/null 2>&1; then
  __conda_setup="$('/opt/conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null || true)"
  if [[ -n "$__conda_setup" ]]; then
    eval "$__conda_setup"
  elif [ -f "/opt/conda/etc/profile.d/conda.sh" ]; then
    . "/opt/conda/etc/profile.d/conda.sh"
  else
    export PATH="/opt/conda/bin:$PATH"
  fi
  unset __conda_setup

  # Activate the workshop environment only if it exists; silence errors otherwise.
  if conda info --envs 2>/dev/null | awk '{print $1}' | grep -qx 'workshop'; then
    conda activate workshop 2>/dev/null || true
  fi
fi

# ---- Ensure zsh-syntax-highlighting is sourced last if installed manually ----
if [ -f "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi
EOF

chown $USERNAME:$USERNAME $HOME/.zshrc

chown -R $USERNAME:$USERNAME /opt/conda
# This is needed to have a predictable channel specification used for builds
# from non-conda-forge channels as conda-smithy does not remove it for us.
rm -f /opt/conda/.condarc

cp /root/.condarc $HOME/.condarc && chown $USERNAME:$USERNAME $HOME/.condarc
